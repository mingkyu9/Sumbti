<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.sum.bti.friend.mapper.FriendMapper">

    <!-- FriendZone 유저목록 가져오기-->
    <select id="getFriendList"  parameterType="map" resultType="FriendList">
        SELECT  u.user_id,
                u.user_mbti,
                u.user_gender,
                u.user_nick,
                u.love_mbti,
                u.hate_mbti,
               (SELECT COUNT(*) FROM like_list lk WHERE lk.like_to = u.user_id) AS like_count,
                di.detail_intro
        FROM    user_info u
             LEFT JOIN detail_info di ON u.user_id = di.user_id
        where u.user_id != #{userId};
    </select>


    <insert id="saveDetail"  parameterType="friendDetailInfo">
            insert into detail_info (user_id, detail_intro, detail_hobby, detail_food, detail_pat)
                             values( #{userId}, #{detailIntro}, #{detailHobby}, #{detailFood}, #{detailPat})
    </insert>

    <select id="showDetailInfo" parameterType="map" resultType="friendDetailInfo">

        select user_id, detail_intro, detail_hobby, detail_food, detail_pat
          from detail_info
            where user_id = #{userId}
    </select>



    <!-- 접속유저가 버튼유저를 좋아하고 있는지 확인 0이면 없고, 1이면 있음-->
    <select id="FriendCheckExistList" parameterType="map" resultType="int">
        select count(*)
          from like_list
            where like_from = #{userId} and like_to = #{userTo}
    </select>


    <insert id="FriendAddLikeList"  parameterType="map">
        insert into like_list (like_from, like_to)
                        values(#{userId}, #{userTo})
    </insert>

    <delete id="FriendDeleteLikeList" parameterType="map">
        delete from like_list where like_from = #{userId} and like_to = #{userTo}
    </delete>

</mapper>
