<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.sum.bti.post.mapper.PostMapper">

    <!-- 받은 메세지 리스트 -->
    <select id="getPostList"  parameterType="map" resultType="postList">

        select post_num,
               post_title,
               DATE_FORMAT(post_time, '%y.%m.%d')  as post_time,
               post_sender,
               post_receiver,
               post_zone,
               u.user_nick,
               u.user_gender,
               u.user_mbti
        from  post_box as p
            LEFT JOIN user_info as u ON p.post_sender = u.user_id
        where p.post_receiver = 'test10';
                               <!-- ${#userId} -->
    </select>

    <select id="getPostDetail" parameterType="map" resultType="postDetail">

        select post_num,
               post_title,
               post_sender,
               post_time,
               post_contents,
               update_date,
               u.user_nick,
               u.user_mbti
        from  post_box as p
            LEFT JOIN user_info as u ON p.post_sender = u.user_id
        where p.post_num = #{postNum}

    </select>

    <!-- 쪽지보내기 -->
    <insert id="postSend" parameterType="sendPost">
        insert into post_box (post_title, post_contents, post_sender, post_receiver)
             values(#{postTitle}, #{postContents}, #{postSender},
                  (select user_id from user_info where user_nick = #{postReceiver}))
    </insert>

    <!-- 쪽지보내기 커플 좋아요한 유저 선택 리스트 불러오기 -->
    <select id="coList" parameterType="map" resultType="likeUserList">
        select user_nick
        from   user_info u
            LEFT JOIN like_list_couple l ON u.user_id = l.couple_like_to
        where l.couple_like_from = #{userId}
    </select>

    <!-- 쪽지보내기 친구 좋아요한 유저 선택 리스트 불러오기 -->
    <select id="frList" parameterType="map" resultType="likeUserList">
        select user_nick
        from   user_info u
            LEFT JOIN like_list_friend l ON u.user_id = l.friend_like_to
        where l.friend_like_from = #{userId}
    </select>

    <!-- 쪽지 삭제  -->
    <delete id="delPost" parameterType="map">
        delete from post_box where post_num = ${postNum}
    </delete>


    <select id="sentPostList"  parameterType="map" resultType="postList">

        SELECT  pb.post_num,
                pb.post_title,
                DATE_FORMAT(pb.post_time, '%y.%m.%d') as post_time,
                pb.post_sender,
                pb.post_receiver,
                pb.post_zone,
                u.user_nick,
                u.user_gender,
                u.user_mbti
        FROM post_box pb
        LEFT JOIN user_info u ON pb.post_receiver = u.user_id
        WHERE pb.post_sender = #{userId};

        <!-- ${#userId} -->
    </select>





</mapper>